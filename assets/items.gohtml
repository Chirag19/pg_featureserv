{{define "body"}}
<div class='crumbs'><a href="{{ .context.URLHome }}">Home</a>
/ <a href="{{ .context.URLCollections }}">{{ .context.Group }}</a>
/ <a href="{{ .context.URLCollection }}">{{ .context.Title }}</a>
/ Items
<a style='margin-left: 20px' class='json-link' href='{{ .context.URLJSON }}' title='JSON document for this page'>JSON</a>
</div>
<hr>

<table>
<tr>
<td><button onclick='doQuery();' title='Click to requery with the parameters'>Query</button></td>
<td class='section-title'>Parameters</td>
<td>
<span class='param-title' title='Limits the number of features in the response'>Limit</span>
<select id='item-limit'>
<option></option>
<option>10</option>
<option>50</option>
<option>100</option>
<option>500</option>
<option>1000</option>
<option>5000</option>
<option>10000</option>
</select>
<span class='param-title' title='Sets the BBOX query parameter to the map extent'>Map BBox</span>
<input type='checkbox' id='chk-bbox'>
</td></tr>
{{template "funArgs" .}}
</table>

<h2>{{ .context.Title }} Features</h2>
<table width='100%'>
<tr>
<td valign='top' width='1%'><div id="map" class="map"></div></td>
<td valign='top' style='padding-left:10px;'>
{{template "propsTable" .}}
</td>
</tr></table>
<div id="popup-container" class="arrow_box"></div>

<script>
var DATA_URL = "{{ .context.URLJSON }}";
ITEMS_PAGE = true;
</script>
{{template "mapScript" .}}
<script>
function onMapLoad() {
	map.on('click', function(evt) {  onFeatureClick(evt); } );
	document.getElementById('feature-title').style.display = 'block';
}
function doQuery() {
	var url = window.location.pathname;
	var newUrl = addFunctionArgs(url);

	var select = document.getElementById('item-limit');
	var lim = select.options[select.selectedIndex].value;
	newurl = addQueryParam(newUrl, 'limit', lim);

	var useBbox = document.getElementById('chk-bbox').checked;
	if (useBbox) {
		var bbox = bboxStr(5);
		newurl = addQueryParam(newurl, 'bbox', bbox);
	}
	window.location.assign(newurl);
}
function addQueryParam(url, name, value) {
	if (! value || value.length <= 0) return url;
	let hasQuery = url.indexOf('?') >= 0;
	let  delim = hasQuery ? '&' : '?';
	let  newUrl = `${url}${delim}${name}=${value}`;
	return newUrl;
}
</script>
{{ end }}
{{define "funArgs"}}
<script>
// No-op for function args - replaced on function Items page
function addFunctionArgs(url) { return url; }
</script>
{{ end }}
