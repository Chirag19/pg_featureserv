{{define "mapScript"}}
<script src="https://openlayers.org/en/v6.1.1/build/ol.js"></script>
<script>
var image = new ol.style.Circle({
	radius: 5,
	fill: new ol.style.Fill({
		color: 'rgb(255, 0, 0)'
	}),
	stroke: new ol.style.Stroke({color: 'red', width: 1})
});
var styles = {
	'Point': new ol.style.Style({
		image: image
	}),
	'LineString': new ol.style.Style({
		stroke: new ol.style.Stroke({
			color: 'red',
			width: 2
		})
	}),
	'MultiLineString': new ol.style.Style({
		stroke: new ol.style.Stroke({
			color: 'red',
			width: 2
		})
	}),
	'MultiPoint': new ol.style.Style({
		image: image
	}),
	'MultiPolygon': new ol.style.Style({
		stroke: new ol.style.Stroke({
			color: 'blue',
			width: 2
		}),
		fill: new ol.style.Fill({
			color: 'rgba(0, 0, 255, 0.1)'
		})
	}),
	'Polygon': new ol.style.Style({
		stroke: new ol.style.Stroke({
			color: 'blue',
			lineDash: [4],
			width: 2
		}),
		fill: new ol.style.Fill({
			color: 'rgba(0, 0, 255, 0.1)'
		})
	}),
	'GeometryCollection': new ol.style.Style({
		stroke: new ol.style.Stroke({
			color: 'magenta',
			width: 2
		}),
		fill: new ol.style.Fill({
			color: 'magenta'
		}),
		image: new ol.style.Circle({
			radius: 10,
			fill: null,
			stroke: new ol.style.Stroke({
				color: 'magenta'
			})
		})
	}),
	'Circle': new ol.style.Style({
		stroke: new ol.style.Stroke({
			color: 'red',
			width: 2
		}),
		fill: new ol.style.Fill({
			color: 'rgba(255,0,0,0.2)'
		})
	})
};
var styleFunction = function(feature) {
	return styles[feature.getGeometry().getType()];
};
var vectorLayer = new ol.layer.Vector({
	source: new ol.source.Vector({
	  url: DATA_URL,
	  format: new ol.format.GeoJSON()
	}),
	style: styleFunction
  });
var map = new ol.Map({
	layers: [
		new ol.layer.Tile({
			source: new ol.source.OSM({
				"url" : "https://maps.wikimedia.org/osm-intl/{z}/{x}/{y}.png"
			})
		}),
//		vectorLayer
	],
	target: 'map',
	controls: ol.control.defaults({
		attributionOptions: {
			collapsible: false
		}
	}),
	view: new ol.View({
		center: [0,0],
		zoom: 10
	})
});
map.addLayer(vectorLayer);

map.once('rendercomplete', function(event) {
    map.getView().fit(vectorLayer.getSource().getExtent(), map.getSize());
});
var overlay = new ol.Overlay({
	element: document.getElementById('popup-container'),
	positioning: 'bottom-center',
	offset: [0, -10]
});
map.addOverlay(overlay);
map.on('click', function(evt) {
	overlay.setPosition();
	var features = map.getFeaturesAtPixel(evt.pixel);
	var loc = evt.coordinate
	if (features) {
		var identifier = features[0].getId();
		var popup = 'Id: ' + identifier
		if (! document.location.href.includes('/items/')) {
			popup = '<a href="items/' + identifier + '.html">' + popup + '</a>'
		}
		overlay.getElement().innerHTML = popup;
		overlay.setPosition(loc);
	}
});
</script>
{{ end }}
